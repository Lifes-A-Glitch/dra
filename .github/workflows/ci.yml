name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - 'assets/**'
  pull_request:
    paths-ignore:
      - '**.md'
      - 'assets/**'

env:
  CARGO_TERM_COLOR: always

jobs:
  # NOTE: always set shell: bash, otherwise on Windows there might be problems!
  build:
    name: ${{ matrix.job.os }}
    runs-on: ${{ matrix.job.runner }}
    strategy:
      matrix:
        job:
          - os: linux
            runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            use-cross: false
          - os: linux-armv6
            runner: ubuntu-latest
            target: arm-unknown-linux-gnueabihf
            use-cross: true
          - os: macos
            runner: macos-latest
            target: x86_64-apple-darwin
            use-cross: false
          - os: windows
            runner: windows-latest
            target: x86_64-pc-windows-msvc
            use-cross: false
    steps:
      - uses: actions/checkout@v3

      - name: Install minimal stable with clippy and rustfmt
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.job.target }}
          profile: minimal
          override: true
          components: rustfmt, clippy

      - name: Setup build tools
        if: matrix.job.use-cross == true
        shell: bash
        run: |
          cargo install cross
          echo "CARGO_BIN=cross" >>$GITHUB_ENV
          echo "CARGO_TARGET=--target ${{ matrix.job.target }}" >>$GITHUB_ENV

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Format check
        shell: bash
        run: make format-check

      - name: Build
        shell: bash
        run: make build

      - name: Lint
        shell: bash
        run: make lint

      - name: Tests
        shell: bash
        run: make test

      - name: Integration tests
        if: matrix.job.use-cross == false
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: make integration-tests

      - name: Debian integration tests
        if: matrix.job.os == 'linux'
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: make debian-tests
